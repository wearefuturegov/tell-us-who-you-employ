version: "3.7"
name: tell-us-who-you-employ-outpost-dev
services:
  # tell-us-who-you-employ app

  app:
    image: "tell-us-who-you-employ-dev"
    env_file:
      - ./tell-us-who-you-employ/.env
    # command: ["tail", "-f", "/dev/null"]
    pull_policy: build
    init: true
    depends_on:
      - postgres
    build:
      context: ./tell-us-who-you-employ
      target: ${RAILS_ENV:-development}
      args:
        NODE_ENV: ${NODE_ENV:-development}
        RAILS_ENV: ${RAILS_ENV:-development}
    ports:
      - 3004:3000
    volumes:
      - ./tell-us-who-you-employ:/usr/src/app:cached
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      RAILS_ENV: ${RAILS_ENV:-development}
      RACK_ENV: ${RACK_ENV:-development}
      APP_ENV: ${APP_ENV:-development}
      DATABASE_URL: ${DATABASE_URL:-postgresql://tell-us-who-you-employ:password@postgres:5432/tell-us-who-you-employ?}
      RAILS_SERVE_STATIC_FILES: ${RAILS_SERVE_STATIC_FILES:-false}
      SECRET_KEY_BASE: ${SECRET_KEY_BASE:-1234}
    networks:
      - external_network
      - internal_network

  # Databases

  postgres:
    image: postgres:13.7-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-tell-us-who-you-employ}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: ${POSTGRES_DB:-tell-us-who-you-employ_development}
    ports:
      - 5433:5432
    volumes:
      - postgres-volume:/var/lib/postgresql/data
    networks:
      - internal_network
      - external_network

  # Outpost app

  outpost:
    image: "outpost:tell-us"
    env_file:
      - ./outpost/.env
    # command: ["tail", "-f", "/dev/null"]
    init: true
    depends_on:
      - postgres-outpost
      - mongo-outpost
    build:
      context: ./outpost
      target: ${RAILS_ENV:-development}
      args:
        NODE_ENV: ${NODE_ENV:-development}
        RAILS_ENV: ${RAILS_ENV:-development}
    ports:
      - 3000:3000
    volumes:
      - ./outpost:/usr/src/app:cached
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      RAILS_ENV: ${RAILS_ENV:-development}
      RACK_ENV: ${RACK_ENV:-development}
      APP_ENV: ${APP_ENV:-development}
      DB_URI: ${DB_URI:-mongodb://mongo-outpost:27017/outpost_api_development}
      DATABASE_URL: ${DATABASE_URL:-postgresql://outpost:password@postgres-outpost:5432/outpost?}
      RAILS_SERVE_STATIC_FILES: ${RAILS_SERVE_STATIC_FILES:-false}
      SECRET_KEY_BASE: ${SECRET_KEY_BASE:-1234}
    networks:
      - external_network
      - internal_network

  # Outpost Databases

  postgres-outpost:
    image: postgres:13.7-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-outpost}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: ${POSTGRES_DB:-outpost_development}
    ports:
      - 5434:5432
    volumes:
      - postgres-outpost-volume:/var/lib/postgresql/data
    networks:
      - internal_network
      - external_network

  mongo-outpost:
    image: mongo:6
    ports:
      - 27018:27017
    volumes:
      - mongo-outpost-volume:/data/db
      - ./outpost/environment/containers/mongo/setup-mongodb.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    environment:
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE:-outpost_api_development}
    networks:
      - internal_network
      - external_network

volumes:
  postgres-volume:
  postgres-outpost-volume:
  mongo-outpost-volume:

networks:
  external_network:
  internal_network:
    internal: true
