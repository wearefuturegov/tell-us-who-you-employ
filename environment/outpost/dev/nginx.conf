events {
  worker_connections 1024;
}

http {
    include /etc/nginx/conf.d/*.conf;

    upstream rails_app {
      server outpost:3000;
    }

    # timeout config
    proxy_connect_timeout       600;
    proxy_send_timeout          600;
    proxy_read_timeout          600;
    send_timeout                600;

    # port 80
    server {
      listen 80;
      return 301 https://$host$request_uri; # automatically redirected to https
    }

    # Default server
    server {
      # define your domain
      # server_name localhost;

      listen 443 ssl;
      ssl_certificate /etc/ssl/certificate.crt;
      ssl_certificate_key /etc/ssl/certificate.key;

      client_max_body_size 2050M; # for big uploads

      # define the public application root
      root   /usr/src/app/public;
      index  index.html;

      # define where Nginx should write its logs
      # access_log /usr/src/app/log/nginx.access.log;
      # error_log /usr/src/app/log/nginx.error.log;

      # deny requests for files that should never be accessed
      location ~ /\. {
        deny all;
      }

      location ~* ^.+\.(rb|log)$ {
        deny all;
      }

      # serve static (compiled) assets directly if they exist (for rails production)
      location ~ ^/(assets|images|javascripts|stylesheets|swfs|system|storage)/ {
        try_files $uri @rails;

        access_log off;
        gzip_static on; # to serve pre-gzipped version

        expires max;
        add_header Cache-Control public;

        # Some browsers still send conditional-GET requests if there's a
        # Last-Modified header or an ETag header even if they haven't
        # reached the expiry date sent in the Expires header.
        add_header Last-Modified "";
        add_header ETag "";
        break;
      }

      # send non-static file requests to the app server
      location / {
        try_files $uri @rails;
      }

      location @rails {
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Real-IP  $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_pass http://rails_app;
      }
    }
}